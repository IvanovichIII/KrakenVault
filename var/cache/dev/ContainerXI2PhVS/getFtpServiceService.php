<?php

namespace ContainerXI2PhVS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getFtpServiceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Service\FtpService' shared autowired service.
     *
     * @return \App\Service\FtpService
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'FtpService.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'flysystem'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'FilesystemAdapter.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'flysystem-ftp'.\DIRECTORY_SEPARATOR.'FtpAdapter.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'flysystem-ftp'.\DIRECTORY_SEPARATOR.'FtpConnectionOptions.php';

        return $container->privates['App\\Service\\FtpService'] = new \App\Service\FtpService(new \League\Flysystem\Ftp\FtpAdapter(new \League\Flysystem\Ftp\FtpConnectionOptions('192.168.1.144', '/', 'captain', 'Nantar01', 21, false, 90, false, true)));
    }
}
